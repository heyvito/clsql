(ns clsql.require-query-test
  (:require [clojure.test :refer :all]
            [clsql.core :refer [require-query]]
            [clsql.helpers :refer [databaseless-config]]))

(require-query simple :refer [select-twenty-four])
(require-query placeholder :refer [query-with-placeholder])
(require-query simple :as sample)
(require-query placeholder :as placeholder-test)

(deftest test-metadata
  (testing "autogenerated metadata"
    (let [{:keys [name arglists doc]} (meta #'select-twenty-four)]
      (is (= (symbol 'select-twenty-four) name))
      (is (= 1 (count arglists)))
      (is (= '[db args & opts] (first arglists)))
      (is (= "This is a documentation block. It should be present in the function's documentation." doc)))))

(deftest test-running
  (testing "execution with refer"
    (let [raw-result (select-twenty-four databaseless-config nil)
          {:keys [test_result]} raw-result]
      (is (= 24 test_result)))
    (let [raw-result (query-with-placeholder databaseless-config {:number 27})
          {:keys [test_result]} raw-result]
      (is (= 27 test_result))))

  (testing "execution with as"
    (let [raw-result (sample/select-twenty-four databaseless-config nil)
          {:keys [test_result]} raw-result]
      (is (= 24 test_result)))
    (let [raw-result (placeholder-test/query-with-placeholder databaseless-config {:number 27})
          {:keys [test_result]} raw-result]
      (is (= 27 test_result)))))
